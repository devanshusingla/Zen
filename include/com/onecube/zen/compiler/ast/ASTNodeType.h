// Sunday, November 26, 2017

#ifndef ZEN_AST_NODE_TYPE_H
#define ZEN_AST_NODE_TYPE_H

/*******************************************************************************
 * ASTNodeType                                                                 *
 *******************************************************************************/

enum zen_ASTNodeType_t {
    ZEN_AST_NODE_UNKNOWN,
    ZEN_AST_NODE_TERMINAL,

    ZEN_AST_NODE_COMPILATION_UNIT,
    ZEN_AST_NODE_IMPORT_DECLARATION,
    ZEN_AST_NODE_ANNOTATED_COMPONENT_DECLARATION,
    ZEN_AST_NODE_ANNOTATIONS,
    ZEN_AST_NODE_ANNOTATION,
    ZEN_AST_NODE_ANNOTATION_TYPE,
    ZEN_AST_NODE_ANNOTATION_ATTRIBUTE,
    ZEN_AST_NODE_COMPONENT_DECLARATION,
    ZEN_AST_NODE_FUNCTION_DECLARATION,
    ZEN_AST_NODE_FUNCTION_PARAMETERS,
    ZEN_AST_NODE_FUNCTION_BODY,
    ZEN_AST_NODE_STATEMENT_SUITE,
    ZEN_AST_NODE_SIMPLE_STATEMENT,
    ZEN_AST_NODE_STATEMENT,
    ZEN_AST_NODE_EMPTY_STATEMENT,
    ZEN_AST_NODE_VARIABLE_DECLARATION,
    ZEN_AST_NODE_VARIABLE_DECLARATOR,
    ZEN_AST_NODE_CONSTANT_DECLARATION,
    ZEN_AST_NODE_CONSTANT_DECLARATOR,
    ZEN_AST_NODE_ASSERT_STATEMENT,
    ZEN_AST_NODE_BREAK_STATEMENT,
    ZEN_AST_NODE_CONTINUE_STATEMENT,
    ZEN_AST_NODE_RETURN_STATEMENT,
    ZEN_AST_NODE_THROW_STATEMENT,
    ZEN_AST_NODE_COMPOUND_STATEMENT,
    ZEN_AST_NODE_IF_STATEMENT,
    ZEN_AST_NODE_IF_CLAUSE,
    ZEN_AST_NODE_ELSE_IF_CLAUSE,
    ZEN_AST_NODE_ELSE_CLAUSE,
    ZEN_AST_NODE_ITERATIVE_STATEMENT,
    ZEN_AST_NODE_LABEL_CLAUSE,
    ZEN_AST_NODE_WHILE_STATEMENT,
    ZEN_AST_NODE_FOR_STATEMENT,
    ZEN_AST_NODE_FOR_PARAMETERS,
    ZEN_AST_NODE_TRY_STATEMENT,
    ZEN_AST_NODE_TRY_CLAUSE,
    ZEN_AST_NODE_CATCH_CLAUSE,
    ZEN_AST_NODE_CATCH_FILTER,
    ZEN_AST_NODE_TYPE_NAME,
    ZEN_AST_NODE_FINALLY_CLAUSE,
    ZEN_AST_NODE_SYNCHRONIZE_STATEMENT,
    ZEN_AST_NODE_WITH_STATEMENT,
    ZEN_AST_NODE_CLASS_DECLARATION,
    ZEN_AST_NODE_EXTENDS_CLAUSE,
    ZEN_AST_NODE_CLASS_SUITE,
    ZEN_AST_NODE_CLASS_MEMBER,
    // ZEN_AST_NODE_CONSTRUCTOR_DECLARATION,
    ZEN_AST_NODE_ENUMERATION_DECLARATION,
    ZEN_AST_NODE_ENUMERATION_BASE_CLAUSE,
    ZEN_AST_NODE_ENUMERATION_SUITE,
    ZEN_AST_NODE_ENUMERATE,
    ZEN_AST_NODE_EXPRESSIONS,
    ZEN_AST_NODE_EXPRESSION,
    ZEN_AST_NODE_ASSIGNMENT_EXPRESSION,
    ZEN_AST_NODE_CONDITIONAL_EXPRESSION,
    ZEN_AST_NODE_LOGICAL_OR_EXPRESSION,
    ZEN_AST_NODE_LOGICAL_AND_EXPRESSION,
    ZEN_AST_NODE_INCLUSIVE_OR_EXPRESSION,
    ZEN_AST_NODE_EXCLUSIVE_OR_EXPRESSION,
    ZEN_AST_NODE_AND_EXPRESSION,
    ZEN_AST_NODE_EQUALITY_EXPRESSION,
    ZEN_AST_NODE_RELATIONAL_EXPRESSION,
    ZEN_AST_NODE_SHIFT_EXPRESSION,
    ZEN_AST_NODE_ADDITIVE_EXPRESSION,
    ZEN_AST_NODE_MULTIPLICATIVE_EXPRESSION,
    ZEN_AST_NODE_UNARY_EXPRESSION,
    ZEN_AST_NODE_POSTFIX_EXPRESSION,
    ZEN_AST_NODE_SUBSCRIPT,
    ZEN_AST_NODE_FUNCTION_ARGUMENTS,
    ZEN_AST_NODE_MEMBER_ACCESS,
    ZEN_AST_NODE_POSTFIX_OPERATOR,
    ZEN_AST_NODE_PRIMARY_EXPRESSION,
    ZEN_AST_NODE_MAP_EXPRESSION,
    ZEN_AST_NODE_MAP_ENTRIES,
    ZEN_AST_NODE_MAP_ENTRY,
    ZEN_AST_NODE_LIST_EXPRESSION,
    ZEN_AST_NODE_NEW_EXPRESSION
};

typedef enum zen_ASTNodeType_t zen_ASTNodeType_t;

#endif /* ZEN_AST_NODE_TYPE_H */